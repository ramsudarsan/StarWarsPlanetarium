{"ast":null,"code":"import _classCallCheck from \"/home/ram385/udemy_course/starwarsplanetarium/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ram385/udemy_course/starwarsplanetarium/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ram385/udemy_course/starwarsplanetarium/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ram385/udemy_course/starwarsplanetarium/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ram385/udemy_course/starwarsplanetarium/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ram385/udemy_course/starwarsplanetarium/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport Searchbar from '../Components/Searchbar';\nimport Fixed from '../Components/Fixed';\nimport Content from '../Components/Content';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.searchScript = function (event) {\n      var eventTargetValue = event.target.value;\n\n      _this.setState({\n        search: eventTargetValue\n      });\n\n      fetch(\"https://swapi.co/api/planets/?search=\".concat(eventTargetValue)).then(function (response) {\n        return response.json();\n      }).then(function (planets) {\n        if (_this.state.search === eventTargetValue) {\n          var temparray = [];\n          temparray.push.apply(temparray, planets.results);\n\n          if (planets.next !== null) {\n            fetch(planets.next).then(function (response) {\n              return response.json();\n            }).then(function (morePlanets) {\n              temparray.push.apply(temparray, morePlanets.results);\n            });\n          }\n\n          _this.setState({\n            planetList: temparray\n          });\n        }\n\n        console.log(_this.state.search);\n      });\n    };\n\n    _this.state = {\n      search: '',\n      planetList: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Fixed, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \" Star Wars Planetarium \"), React.createElement(Searchbar, {\n        onChange: this.searchScript,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(Content, {\n        planets: this.state.planetList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ram385/udemy_course/starwarsplanetarium/src/Containers/App.js"],"names":["React","Component","Searchbar","Fixed","Content","App","searchScript","event","eventTargetValue","target","value","setState","search","fetch","then","response","json","planets","state","temparray","push","apply","results","next","morePlanets","planetList","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;;AADU,UAQdC,YARc,GAQC,UAACC,KAAD,EAAW;AACtB,UAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAtC;;AACA,YAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAEJ;AADE,OAAd;;AAGAK,MAAAA,KAAK,gDAAyCL,gBAAzC,EAAL,CACKM,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;AACb,YAAI,MAAKC,KAAL,CAAWN,MAAX,KAAsBJ,gBAA1B,EAA4C;AACxC,cAAIW,SAAS,GAAG,EAAhB;AACAA,UAAAA,SAAS,CAACC,IAAV,CAAeC,KAAf,CAAqBF,SAArB,EAAgCF,OAAO,CAACK,OAAxC;;AACA,cAAIL,OAAO,CAACM,IAAR,KAAiB,IAArB,EAA0B;AACtBV,YAAAA,KAAK,CAACI,OAAO,CAACM,IAAT,CAAL,CACKT,IADL,CACU,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aADlB,EAEKF,IAFL,CAEU,UAAAU,WAAW,EAAI;AAACL,cAAAA,SAAS,CAACC,IAAV,CAAeC,KAAf,CAAqBF,SAArB,EAAgCK,WAAW,CAACF,OAA5C;AAAqD,aAF/E;AAGH;;AACD,gBAAKX,QAAL,CAAc;AACVc,YAAAA,UAAU,EAAEN;AADF,WAAd;AAGH;;AACDO,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKT,KAAL,CAAWN,MAAvB;AACH,OAhBL;AAkBH,KA/Ba;;AAEV,UAAKM,KAAL,GAAa;AACTN,MAAAA,MAAM,EAAE,EADC;AAETa,MAAAA,UAAU,EAAE;AAFH,KAAb;AAFU;AAMb;;;;6BA4BQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKnB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKY,KAAL,CAAWO,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EA7CaxB,S;;AAgDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Searchbar from '../Components/Searchbar';\nimport Fixed from '../Components/Fixed';\nimport Content from '../Components/Content';\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            search: '',\n            planetList: []\n        }\n    }\n\n    searchScript = (event) => {\n        const eventTargetValue = event.target.value;\n        this.setState({\n            search: eventTargetValue\n        })\n        fetch(`https://swapi.co/api/planets/?search=${eventTargetValue}`)\n            .then(response => response.json())\n            .then(planets => {\n                if (this.state.search === eventTargetValue) {\n                    let temparray = [];\n                    temparray.push.apply(temparray, planets.results);\n                    if (planets.next !== null){\n                        fetch(planets.next)\n                            .then(response => response.json())\n                            .then(morePlanets => {temparray.push.apply(temparray, morePlanets.results)})\n                    }\n                    this.setState({\n                        planetList: temparray\n                    });\n                }\n                console.log(this.state.search);\n            }\n            );\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Fixed>\n                    <h1 className=\"title\"> Star Wars Planetarium </h1>\n                    <Searchbar onChange={this.searchScript} />\n                </Fixed>\n                <Content planets={this.state.planetList} />\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}